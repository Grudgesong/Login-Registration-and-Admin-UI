/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sangraj.lra.UI.Admin.USDE;

import com.sangraj.lra.UI.Admin.AdministratorUI;
import com.sangraj.lra.UI.Admin.USDE.Users;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Song Grudge Ranjit
 */
public class SearchUI extends javax.swing.JFrame {

    /**
     * Creates new form SearchUI
     */
    public SearchUI() {
        initComponents();
        initComponents2();
    }

    private void initComponents2() {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"User id", "Username", "Name", "Email"});
        tblUser.setModel(model);
    }
//THIS CAN BE USED TO GET COLUMN NAMES FROM DATABASE-----------------------------------------------------------------------------------------------------
//    private void initComponents2() {
//        try {
//            Class.forName("com.mysql.jdbc.Driver");
//            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/registration", "root", null);
//            String sql = "SELECT user_id,username,firstname,middlename,lastname,email FROM tbl_registered";
//            Statement st = conn.createStatement();
//            ResultSet rs = st.executeQuery(sql);
//            ResultSetMetaData r = rs.getMetaData();
//            Vector column = new Vector();
//            int c = r.getColumnCount();
//            for (int i = 1; i <= c; i++) {
//                column.add(r.getColumnName(i));
//            }
//            tblUser.setModel(new DefaultTableModel(column, ABORT));
//            jScrollPane1.setViewportView(tblUser);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
//        }
//    }
//-------------------------------------------------------------------------------------------------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonClick(evt);
            }
        });

        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonClick(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(btnBack))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBorder(null);

        tblUser.setAutoCreateRowSorter(true);
        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblUser);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonClick
        AdministratorUI ui = new AdministratorUI();
        ui.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_backButtonClick

    private void searchButtonClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonClick
        findUsers();
        
    }


// FUNCTION TO CONNECT TO DATABASE------------------------------------------------------------------------------------------------------------------------

    public Connection getConnection() {
        Connection con = null;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/registration", "root", null);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }

        return con;
    }
//-------------------------------------------------------------------------------------------------------------------------------------------------------
    // RETURNS USERS ARRAY LIST WITH PARTICULAR DATA-------------------------------------------------------------------------------------------------

    public ArrayList<Users> ListUsers(String ValToSearch) {
        ArrayList<Users> usersList = new ArrayList<Users>();

        Statement st;
        ResultSet rs;

        try {
            Connection con = getConnection();
            st = con.createStatement();
            String searchQuery = "SELECT * FROM `tbl_registered` WHERE CONCAT(`user_id`,'username', `firstname`,`middlename`, `lastname`, `email`)LIKE '%" + ValToSearch + "%'";
            rs = st.executeQuery(searchQuery);

            Users user;

            while (rs.next()) {
                user = new Users(
                        rs.getString("username"),
                        rs.getString("firstname"),
                        rs.getString("middlename"),
                        rs.getString("lastname"),
                        rs.getString("email"),
                        rs.getInt("user_id"));

                usersList.add(user);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

        return usersList;
    }
//------------------------------------------------------------------------------------------------------------------------------------------------------
    // DISPLAYS DATA IN JTABLE----------------------------------------------------------------------------------------------------------------------

    public void findUsers() {
        if (txtSearch.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter then name of the person you want to Search");
        } else {
            ArrayList<Users> users = ListUsers(txtSearch.getText());
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnIdentifiers(new Object[]{"User id", "Username", "Name", "Email"});
            Object[] row = new Object[4];

            for (int i = 0; i < users.size(); i++) {
                row[0] = users.get(i).user_id;
                row[1] = users.get(i).username;
                row[2] = ((users.get(i).firstname) + " " + (users.get(i).middlename) + " " + (users.get(i).lastname));
                row[3] = users.get(i).email;

                model.addRow(row);
            }
            tblUser.setModel(model);
            jScrollPane1.setViewportView(tblUser);
            tblUser.setEnabled(false);
        }
    }//GEN-LAST:event_searchButtonClick
//-------------------------------------------------------------------------------------------------------------------------------------------------------
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
